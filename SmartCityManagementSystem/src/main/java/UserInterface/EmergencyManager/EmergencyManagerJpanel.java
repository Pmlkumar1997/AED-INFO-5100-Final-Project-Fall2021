/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EmergencyManager;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.GrievanceManagement;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Complaint;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class EmergencyManagerJpanel extends javax.swing.JPanel {

    /**
     * Creates new form EmergencyManagerJpanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    DefaultTableModel dtm;
    int row,col;
    public EmergencyManagerJpanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization ) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        dtm = (DefaultTableModel) tblEmergencyOrganization.getModel();
        populateTable();
        displayEmployes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmergencyOrganization = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnDecline = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboEmergencyEmploye = new javax.swing.JComboBox();
        btnAssign = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Emergency Enterprise Manager ");

        tblEmergencyOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Resident Name", "Priority", "Message", "Status", "Employee", "Request Date", "Resolve Date"
            }
        ));
        jScrollPane1.setViewportView(tblEmergencyOrganization);

        btnAccept.setText("Accept Request");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnDecline.setText("Decline Request");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Assign Employe");

        comboEmergencyEmploye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEmergencyEmployeActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(42, 42, 42)
                        .addComponent(comboEmergencyEmploye, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnAssign))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAccept)
                        .addGap(74, 74, 74)
                        .addComponent(btnDecline))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnDecline))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboEmergencyEmploye, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign))
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        
         row = tblEmergencyOrganization.getSelectedRow();
        
        String currentStatus = dtm.getValueAt(row, 3).toString();
        
        if(currentStatus.equalsIgnoreCase("Complaint raised"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Complaint Accepted");
            
          
            JOptionPane.showMessageDialog(this, "Complaint is Accepted", " Complaint Accepted", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already accepted", " Complaint Accepted", 1);
            
        }
        populateTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
         row = tblEmergencyOrganization.getSelectedRow();
        String currentStatus = dtm.getValueAt(row, 3).toString();
        if(currentStatus.equalsIgnoreCase("Complaint raised"))
        {
            userAccount.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Comlplaint Declined");
            
        }
         else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already accepted", " Complaint Accepted", 1);
            
        }
        populateTable();
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void comboEmergencyEmployeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEmergencyEmployeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEmergencyEmployeActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        
        UserAccount userAccount = (UserAccount) comboEmergencyEmploye.getSelectedItem();
        
        row = tblEmergencyOrganization.getSelectedRow();
        String currentStatus = dtm.getValueAt(row, 3).toString();
        
        Complaint complaint = (Complaint) organization.getWorkQueue().getListOfWorkQueues().get(row);
        
        if(currentStatus.equalsIgnoreCase("Complaint Accepted"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Assigned Employee");
            
          
            JOptionPane.showMessageDialog(this, "Complaint is Accepted and assigned to respective Employee", " Complaint is forwarded to employee", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Complaint Declined")){
            
            JOptionPane.showMessageDialog(this, "This complaint is Already declined earlier", " Complaint declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Complaint is already Assigend to Employee", " Complaint Accepted", 1);
            
        }
        
        userAccount.getWorkQueue().addWorkRequest(complaint);
        
        
        complaint.setSender(userAccount);
        complaint.setStatus("Assigned to Employee");
        populateTable();
        
        
       
        
        
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnDecline;
    private javax.swing.JComboBox comboEmergencyEmploye;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmergencyOrganization;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        dtm.setRowCount(0);
  
        WorkQueue workQueue = organization.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
            Complaint complaint = (Complaint) workRequest;
            
            String receiver = "Not yet Assigned";
            if( complaint.getReceiver() != null)
                receiver = complaint.getReceiver().getEmployee().getName();
            
            Date date = null;
            if(complaint.getStatus().equalsIgnoreCase("Complaint Resolved")) {
                  date = complaint.getResolveDate();
            }
            
            Object[] objs = {complaint.getSender().getResident().getName(),complaint.getPriority(), complaint.getMessage(), complaint.getStatus(),receiver, complaint.getRequestDate(),date};
            dtm.addRow(objs);
            
        }
    }

    private void displayEmployes() {
         
                for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList())
                    comboEmergencyEmploye.addItem(userAccount);
            }
  
        }
        
    
    
    
        

